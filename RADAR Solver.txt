//Start with basic input from RADAR
//                                                                 Phase 1
//Phase 1 finds relative direction and speed of target using a 6 minute plot         
Input "R° ",A
Input "R DIST ",B
Input "M° ",C
Input "M DIST ",D
ClrHome
Fix 4
//Set (x1,y1) and (x2,y2) 
Bsin(A→E
Bcos(A→F
Dsin(C→G
Dcos(C→H
G-E→θ
H-F→Z
//Condition for N/S course. If exeption is not made the program will try to / by 0
If θ≠0
Then
tan⁻¹(Z/θ)→Y
//Logic gates to find relative direction from H
If Z>0 and θ>0
90-Y→X
If Z>0 and θ<0
270+abs(Y)→X
If Z<0 and θ<0
270-Y→X
If Z<0 and θ>0
90-Y→X
End
10√(Z^2+θ^2)→N
Disp "RSPEED
Disp N
Disp "R°
If θ≠0
Then
Disp X
X→M
Else
Disp "ERROR 1
End
//prep for phase 4
A→N
C→O
//                                                              phase 2
//Phase 2 finds True course and True speed of Target in 6 minute plot
P→C
Q10→D
Input "COG",A
Input "SOG",B
//Sets (xt1,yt1) and (xt2,yt2)
Bsin(A→θ
Bcos(A→Z
Dsin(C→Y
Dcos(C→X
H-(F-Z)→A
G-(E-θ→B
tan⁻¹(A/B)→C
//Logic gate to find true course out of C
If A>0 and B>0
90-C→T
If A>0 and B<0
270-C→T
If A<0 and B<0
180+C→T
If A<0 and B>0
90-C→T
ClrHome
Disp "TRUE °
Disp T
Disp "TRUE SPEED
//Pythagoris to find true speed
√(A^2+B^2)→N
Disp N10
Pause 
//                                                            Phase 3
//Phase 3 finds cpa direction and speed
//formula finds distance of CPA
//It's a little redundant at this point because 
//the direction finder can function as a dist finder
(abs((H-F)0-(G-E)0+(GF)-(HE)))/(√((H-F)^2+(G-E)^2))→O
M-90→Z
//finds (x3,y3)
//(x4,y4) is stated as 0
1sin(Z→A
1cos(Z→B
((⁻A(EH-FG))/(⁻B(E-G)+A(F-H)))→K
((⁻B(EH-FG))/(⁻B(E-G)+A(F-H)))→L
tan⁻¹(K/L)→A
//Logic gates to find CPA direction from θ
If K>0 and L>0
A→P
If L<0
180+A→P
If K<0 and L>0
360+A→P
Disp "CPA DIST
Disp O
Disp "CPA DIRECTION
Disp P
//At this point I think it works well. 
//Even example 7-5 works now.
//                                                            Phase 4
E-K→A
F-L→B
√(A^2+B^2)→C
C/(N/10)→D

