//Start with basic input from RADAR
Input "R° ",A
Input "R DIST ",B
Input "M° ",C
Input "M DIST ",D
ClrHome
Fix 4
//Set (x1,y1) and (x2,y2) 
Bsin(A→I
Bcos(A→J
Dsin(C→K
Dcos(C→L
K-I→N
L-J→O
//Condition for N/S course. If exeption is not made the program will try to / by 0
If N≠0
Then
tan⁻¹(O/N)→H
//Logic gates to find relative direction from H
If O>0 and N>0
H→P
If O>0 and N<0
360+H→P
If O<0 and N<0
270-H→P
If O<0 and N>0
90-H→P
End
√(O^2+N^2)→Q
Disp "RSPEED
Disp Q10
Disp "R°
If N≠0
Then
Disp P
Else
Disp "ERROR 1
End
P→C
Q10→D
Input "COG",A
Input "SOG",B

If A>0 and A<90
1→Z
If A>90 and A<180
2→Z
If A>180 and A<270
3→Z
If A>270 and A<360
4→Z
If C>0 and C<90
1→W
If C>90 and C<180
2→W
If C>180 and C<270
3→W
If C>270 and C<360
4→W
//Sets (xt1,yt1) and (xt2,yt2)
Bsin(A→X
Bcos(A→Y
Dsin(C→U
Dcos(C→V
U+X→S
V+Y→T
tan⁻¹(S/T)→E
//Logic gate to find true course out of E
If S>0 and T>0
E→F
If S>0 and T<0
180+E→F
If S<0 and T<0
180+E→F
If S<0 and T>0
360+E→F
ClrHome
If N=0
Then
Disp "TRUE COURSE N/A
Disp "TRUE SPEED
Disp "Error 1
Else
Disp "TRUE °
Disp F
Disp "TRUE SPEED
//Pythagoris to find true speed
√(S^2+T^2)→G
Disp G
End
//formula finds distance of CPA
//It's a little redundant at this point because the direction finder can function as a dist finder
(abs((L-J)0-(K-I)0+(KJ)-(LI)))/(√((L-J)^2+(K-I)^2))→O
P-90→θ
//finds (x3,y3)
//(x4,y4) is stated as 0
1sin(θ→W
1cos(θ→Z
//Full (x5,y5) formula in code book
((⁻W(IL-JK))/(⁻Z(I-K)+W(J-L)))→S
((⁻Z(IL-JK))/(⁻Z(I-K)+W(J-L)))→T
tan⁻¹(S/T)→θ
//Logic gates to find CPA direction from θ
If S>0 and T>0
θ→θ
If T<0
180+θ→θ
If S<0 and T>0
360+θ→θ
Pause 
Disp "CPA DIST
Disp O
Disp "CPA DIRECTION
Disp θ
//At this point I think it works well. Check example 7-5
